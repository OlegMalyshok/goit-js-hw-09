{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAXAO,SAASC,cAAc,SA0C/BC,iBAAiB,UA3BtB,SAAyBC,GACvBA,EAAEC,iBAEF,MACEC,UAAYZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAEM,cACNC,WAAaC,SAASL,EAAMM,OAC5BC,UAAYF,SAASJ,EAAKK,OAC1BE,YAAcH,SAASH,EAAOI,OAE9B,IAAK,IAAIG,EAAI,EAAGA,EAAID,YAAaC,IAC/BxB,EAAcwB,EAAGL,YACdM,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBwB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAqB3B,QAAiBC,MAAU,IAGnD2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBwB,EAAA5B,GAAS6B,OAAOG,QACd,sBAAoB7B,QAAeC,MAAU,IAInDiB,YAAcG,S","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onPromiseCreate(e) {\n  e.preventDefault();\n\n  const {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n  inputDelay = parseInt(delay.value);\n  inputStep = parseInt(step.value);\n  inputAmount = parseInt(amount.value);\n\n  for (let i = 0; i < inputAmount; i++) {\n    createPromise(i, inputDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    inputDelay += inputStep;\n  }\n}\n\nform.addEventListener('submit', onPromiseCreate);\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","e","preventDefault","elements","delay1","step","amount","currentTarget","inputDelay","parseInt","value","inputStep","inputAmount","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.b873d22a.js.map"}